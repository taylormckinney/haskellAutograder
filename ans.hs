-- module HWX where
 
 import Test.HUnit
 
 {- This is a TestList that links together all the student tests. 
  - It must be manually created, but cannot be in the file on the first
  - compiliation, as the corresponding student tests don't exist in the file until after
  - run.sh. To get around this, I just comment out this TestList before the inital ghc
  - call, and then uncomment it after I've run run.sh It's not a perfect solution, but this 
  - list only needs to be created once, and will work for any number of functions relating
  - to a certain student, and any file that is run with ioTest.hs 
  -} 
 allTests = TestList [ TestLabel "987654321" tests987654321, 
                       TestLabel "123456789" tests123456789 
                   ]
 

 {- generated by ioTest.hs using tests directory, which contains test.hs and test2.hs: -}
 countZeros987654321 [] = 0
 countZeros987654321 x = 2

 printRes987654321 x = "a purposefully wrong result"
 tests987654321 = TestList [ 
		TestCase (assertEqual "countZeros" 1 (countZeros987654321 [0,1,1])), 
		TestCase (assertEqual "printRes" "there are 1 zeros" (printRes987654321 1)) 
		] 
 countZeros123456789 :: [Integer] -> Integer
 countZeros123456789 [] = 0
 countZeros123456789 (x:xs) | x == 0 = 1 + countZeros123456789 xs
                  | otherwise = countZeros123456789 xs

 printRes123456789 x = "there are " ++ (show x) ++ " zeros"
 tests123456789 = TestList [ 
		TestCase (assertEqual "countZeros" 1 (countZeros123456789 [0,1,1])), 
		TestCase (assertEqual "printRes" "there are 1 zeros" (printRes123456789 1)) 
		] 

 {- output generated by ghci, which is expected because the functions in test2.hs (student id 987654321)
  - are purposefully wrong, while the functions in test.hs (student id 123456789) are correct. 
  ### Failure in: 0:987654321:0             
  countZeros
  expected: 1
   but got: 2
  ### Failure in: 0:987654321:1             
   printRes
   expected: "there are 1 zeros"
    but got: "a purposefully wrong result"
    Cases: 4  Tried: 4  Errors: 0  Failures: 2
    Counts {cases = 4, tried = 4, errors = 0, failures = 2}
  -}

